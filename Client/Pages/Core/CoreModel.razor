@page "/Core/CoreModel"
@page "/Core/CoreModel/{IsSPDR:bool}"

@inject AppSettings appSettings
@inject HttpClient httpClient
@inject NavigationManager nav

@using SectorModel.Client.Pages.Components
@using SectorModel.Shared.Entities

<AppHeader/>

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <h4>@model.Name</h4>
        </div>
        <div class="col-6" style="text-align:right;">
            <span>Starting Date:@model.StartDate.ToShortDateString()</span>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
           <DataGrid Items="@modelEquityList" TItem="ModelItem" Context="m">
				<HeaderTemplate>
					<th>Symbol</th>
					<th>Name</th>
					<th>Percent</th>
					<th>Last Price</th>
				</HeaderTemplate>
				<RowTemplate>
					<td>@m.Equity.Symbol</td>
					<td>@m.Equity.SymbolName</td>
					<td>@Math.Round(m.Percentage, 0)</td>
					<td>@m.LastPrice</td>
				</RowTemplate>
				<FooterTemplate>
					<td colspan="4">
						Equities in Model: @m.Count
					</td>
					<td>
						Total Cost: @totalCost.ToString("n")
					</td>
					<td>
						Current Value: @totalValue.ToString("n")
					</td>
					<td>
						Overall: (totalValue - totalCost).ToString("n")
					</td>
				</FooterTemplate>
			</DataGrid>

        </div>
    </div>
</div>

@code
{
	decimal totalValue = 0;
    decimal totalCost = 0;

    List<ModelItem> modelEquityList = new List<ModelItem>();

    Model model = new Model();

	[Parameter]
	public bool IsSPDR {get; set;}

    protected override async Task OnInitializedAsync()
    {
		if (IsSPDR)
		{	
			model = appSettings.SPDRModel;	
		}
		else
		{
			model = appSettings.CoreModel;
		}	
	
        modelEquityList = await httpClient.GetFromJsonAsync<List<ModelItem>>($"quote/GetModelItemPrices?modelId={model.Id}&quotedate={DateTime.Now}");

	}

	private decimal GetValue(decimal inValue)
    {
        totalValue += inValue;
        return inValue;
    }

    private decimal GetCost(decimal inValue)
    {
        totalCost += inValue;
        return inValue;
    }



}
