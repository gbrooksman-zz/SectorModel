@page "/Models/ModelItemList/{modelId:guid}/{CanAdd:bool}/{CanEdit:bool}"

@inject AppSettings appSettings
@inject HttpClient httpClient
@inject NavigationManager nav
@inject AppState appState;

@using SectorModel.Client.Pages.Components
@using SectorModel.Shared.Entities
@using SectorModel.Client.Common


<AppHeader/>

@if (ShowDialog)
{
	<div class="modal border border-dark" tabindex="-1" style="display:block;height:700px;" role="dialog">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<p class="modal-title">Add an Item to the Model</p>
					<button type="button" class="close" @onclick="HideDialog">
						<span aria-hidden="true">X</span>
					</button>
				</div>
				<div class="modal-body">
					<div class="row">
						<div class="col-12">
							<ModelItemEdit EditModelItem="@modelItem" Model="@model"/> 
						</div>
					</div>                            
					<br />
					<div class="row" style="margin:2px;height:450px;overflow-x: hidden;overflow-y: scroll;">
						<div class="container">
							this is another row in the body
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-6">
            <h4>@model.Name</h4>
        </div>
        <div class="col-6" style="text-align:right;">
            <span>Starting Date:@model.StartDate.ToShortDateString()</span>
        </div>
    </div>	
    <div class="row">

		
        <div class="col-12">
				@if (CanAdd)
				{
					<input type="button" id="btnAdd" class="btn btn-primary" @onclick="ShowAddItem" value="Add" />
				}
			<DataGrid Items="@modelEquityList" TItem="ModelItem" Context="m">
				<HeaderTemplate>
					<th>Symbol</th>
					<th>Name</th>
					<th>Percent</th>
					<th>Last Price</th>
					<th>Shares</th>
					<th>Current Value</th>
					<th>Cost</th>
					<th>Gain/Loss</th>
					@if(CanEdit)
					{
						<th>Actions</th>
					}
				</HeaderTemplate>
				<RowTemplate>
					<td>@m.Equity.Symbol</td>
					<td>@m.Equity.SymbolName</td>
					<td>@Math.Round(m.Percentage, 0)</td>
					<td>@m.LastPrice</td>
					<td> @m.Shares</td>
					<td> @GetValue(m.CurrentValue)</td>
					<td> @GetCost(m.Cost)</td>
					<td>@Utils.CalcGainLoss(m.CurrentValue, m.Cost) </td>

					@if(CanEdit)
					{
						<td>
							<input type="button" class="btn btn-secondary" value="Edit" @onclick="( () => {EditItem(m);})"/>
							</td>
					}
				</RowTemplate>
				<FooterTemplate>
					<td colspan="4">
						Equities in Model: @m.Count
					</td>
					<td>
						Total Cost: @Utils.FormatNumber(totalCost);
					</td>
					<td>
						Current Value: @Utils.FormatNumber(totalValue);
					</td>
					<td>
						Overall:  @Utils.FormatNumber(totalValue - totalCost);
					</td>
				</FooterTemplate>
			</DataGrid>
        </div>
    </div>
</div>

@code
{
	[Parameter]
	public Guid modelId {get; set;}

	[Parameter]
	public bool CanAdd { get; set; } = false;

	[Parameter]
    public bool CanEdit { get; set; } = false;

	bool ShowDialog = false;

	decimal totalValue = 0;
    decimal totalCost = 0;

	Model model = new Model();

	ModelItem modelItem = new ModelItem();

	List<ModelItem> modelEquityList = new List<ModelItem>();

    protected override async Task OnInitializedAsync()
    {
		model = await httpClient.GetFromJsonAsync<Model>($"model/Get?modelId={modelId}&quoteDate={DateTime.Now}");
		modelEquityList = model.ItemList;
	}

	private MarkupString GetValue(decimal inValue)
    {
        totalValue += inValue;
        return Utils.FormatNumber(inValue);
    }

    private MarkupString GetCost(decimal inValue)
    {
        totalCost += inValue;
        return Utils.FormatNumber(inValue);
    }

	private void ShowAddItem()
	{
		ShowDialog = true;
	}

	private void EditItem(ModelItem item)
	{
		modelItem = item;
		modelItem.ModelId = modelId;
		ShowDialog = true;
	}

	private void HideDialog()
	{
		ShowDialog = false;
	}


}

