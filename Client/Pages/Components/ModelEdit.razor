@page "/ModelEdit"
@page "/ModelEdit/{modelId:guid}"

@inject AppSettings appSettings
@inject AppState appState
@inject NavigationManager nav
@inject HttpClient httpClient

@using SectorModel.Shared.Entities;
@using System.Net.Http.Json;


<EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row form-group">
		<label>Name</label>
        <div class="col-sm-4">
            <InputText class="form-control" type="text" id="txtName" size="50"
                       placeholder="model name" @bind-Value="model.Name"></InputText>
        </div>
    </div>

    <div class="row form-group">
        <div class="col-sm-4">
			<label for="chkPrivate" >Is Private?</label>
            <InputCheckbox class="form-control" type="checkbox" id="chkPrivate"
                           @bind-Value="model.IsPrivate"></InputCheckbox>
        </div>
    </div>

    <div class="row form-group">
        <div class="col-sm-4">
			<label for="chkActive" >Is Active?</label>
            <InputCheckbox class="form-control" type="checkbox" id="chkActive"
                           @bind-Value="model.IsActive"></InputCheckbox>
        </div>
    </div>

     <button class="btn btn-primary" type="submit">Save</button>

</EditForm>

@code
{
    private Model model = new Model();

    [Parameter]
    public Guid modelId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        model = await httpClient.GetFromJsonAsync<Model>($"model/get?modelId={modelId}");

    }

    private async Task HandleValidSubmit()
    {       
        

       
    }
}
