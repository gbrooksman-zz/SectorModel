@inject AppSettings appSettings
@inject HttpClient httpClient
@using SectorModel.Client.Common
@using SectorModel.Shared.Entities

<DataGrid Items="@ModelEquityList" TItem="ModelItem">
    <HeaderTemplate>
        <th>Symbol</th>
        <th>Name</th>
        <th>Percent</th>
        <th>Last Price</th>
        <th>Cost</th>
        <th>Current Value</th>
        <th>Gain/Loss</th>
    </HeaderTemplate>
    <RowTemplate>
        <td>@context.Equity.Symbol</td>
        <td>@context.Equity.SymbolName</td>
        <td>@Math.Round(context.Percentage, 0)</td>
        <td>@context.LastPrice</td>
        <td>@GetCost(context.Cost).ToString("n")</td>
        <td>@GetValue(context.CurrentValue).ToString("n")</td>
        <td>@Utils.CalcGainLoss(context.CurrentValue, context.Cost).ToString("n") </td>
    </RowTemplate>
    <FooterTemplate>
        <td colspan="4">
            Equities in Model: @context.Count
        </td>
        <td>
            Total Cost: @totalCost.ToString("n")
        </td>
        <td>
            Current Value: @totalValue.ToString("n")
        </td>
        <td>
            Overall: @Utils.CalcGainLoss(totalValue, totalCost).ToString("n")
        </td>
    </FooterTemplate>
</DataGrid>



@code
{

    [Parameter]
    public List<ModelItem> ModelEquityList { get; set; }

    decimal totalValue = 0;
    decimal totalCost = 0;

    protected override void OnInitialized()
    {
      
    }

    private decimal GetValue(decimal inValue)
    {
        totalValue += inValue;
        return inValue;
    }

    private decimal GetCost(decimal inValue)
    {
        totalCost += inValue;
        return inValue;
    }
}
