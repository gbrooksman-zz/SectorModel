@page "/equitygroups"
@inject AppStateContainer state
@inject HttpClient httpClient
@using SectorModel.Client.Pages.Components
@using SectorModel.Shared.Entities

<h1>Equity Groups</h1>

<br />
<div class="container-fluid">
    <div class="card-deck">
        @foreach (var peg in popEquityGroupList)
        {
            <div class="card">
                <div class="card-header"> @peg.GroupName</div>
                <div class="card-body">
                    <p>Equities in Group: @peg.EquityCount</p>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <PieChart />
</div>
@code
{
    private List<PopulatedEquityGroup> popEquityGroupList = new List<PopulatedEquityGroup>();

    protected override async Task OnInitializedAsync()
    {
        await ListEquityGroups();
    }

    private async Task ListEquityGroups()
    {
        var response = await httpClient.GetFromJsonAsync<List<Model>>($"equitygroup/getlist");
        List<Model> equityGroupList = response.ToList();

        foreach (var equityGroup in equityGroupList)
        {
            PopulatedEquityGroup peg = new PopulatedEquityGroup();
            peg.GroupName = equityGroup.Name;
            peg.EquityCount = await GetGroupCount(equityGroup.Id);
            popEquityGroupList.Add(peg);
        }
    }

    private async Task<int> GetGroupCount(Guid equityGroupid)
    {
        var response = await httpClient.GetFromJsonAsync<int>($"equitygroup/getcount?equitygroupid={equityGroupid}");
        return response;
    }

    internal class PopulatedEquityGroup
    {
        internal string GroupName { get; set; }
        internal int EquityCount { get; set; }
    }
}
